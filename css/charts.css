.axis-label {
  font-size: 0.8rem;
  fill: var(--black-color);
  font-weight: 500;
}

.axis path,
.axis line {
  /* Using header-color for axis lines */
  stroke: var(--header-color);
}

.axis text {
  fill: var(--black-color);
  /* fill: var(--dark-green-color); */
  font-size: 0.75rem;
}

.bar {
  transition: fill 0.2s ease;
}

.bar:hover {
  /* On hover, switching to pastel-green-color */
  fill: var(--pastel-green-color);
}

.pie-slice path {
  stroke: var(--white-color);
  stroke-width: 1px;
  transition: fill 0.2s ease;
}

.pie-slice path:hover {
  opacity: 0.85;
}

.chart_insights {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  margin-top: var(--spacing);
  padding: var(--spacing);
  width: 100%;
}

/* Container for your plots */

#calendar-container {
  min-height: 300px;
}

.chart_container {
  display: flex;
  flex-direction: column;
  padding: 1rem 1.5rem;
  border-radius: var(--border-radius-small);
  border: 1px solid #ddd;
  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);
  width: 45.5%;
  min-height: 400px;
  transition: width 2s ease;
  position: relative;
}

.chart_container.full_width {
  width: 100%;
}

.chart_container svg {
  display: flex;
  margin: auto;
}

/* Keep the h2 always at the top of its container */
.chart_container h2 {
  position: sticky;
  top: 0;
  background: #fff; /* match container background */
  padding: 5px;
  margin-bottom: 10px; /* space between header and content */
  z-index: 1;
  border-bottom: 1px solid #ddd; /* optional, to visually separate header */
}

.chart_tooltip_wrapper {
  display: flex;
  flex-direction: column;
  width: 50%;
}

.sankey_container {
  display: flex;
  flex-direction: row;
}

.legend_panel {
  display: flex;
  width: 50%;
  height: fit-content;
}

.legend-container {
  padding: 5px;
  background: #f9f9f9;
  border: 1px solid #ccc;
  border-radius: 4px;
  width: 300px; /* adjust as needed */
}

.legend-item {
  font-size: 14px;
}


/* new test */
/* --- Styles for the Line Graph Brush --- */

/* Style the main selection area (the box between the handles) */
/* Target the brush within the specific chart container if needed */
#calendar .brush .selection {
  fill: #1DB954;         /* A fill color for the selected range - use your theme green */
  fill-opacity: 0.25;     /* Make it semi-transparent */
  stroke: #189a46;       /* Optional: Darker border for the selection */
  stroke-width: 1px;
  shape-rendering: crispEdges; /* Make edges sharp */
  cursor: move;          /* Cursor indicates the whole selection can be moved */
}

/* Style the brush handles (the draggable bars/edges of the box) */
#calendar .brush .handle {
  /* These handles are typically <rect> elements generated by D3 */
  fill: #444;           /* A darker color for the draggable bars */
  fill-opacity: 0.7;
  stroke: #222;         /* Border for the handles */
  stroke-width: 1px;
  width: 8px;           /* Make the handles visually wider like bars */
  shape-rendering: crispEdges;
}

/* Specific cursor for the side handles */
#calendar .brush .handle--w,
#calendar .brush .handle--e {
   cursor: ew-resize;     /* East-West resize cursor */
   /* Adjust width specifically if the general .handle width doesn't apply */
   /* Note: D3 calculates handle positions; direct width might be overridden.
      The fill/stroke on the handle's rect is usually the most effective styling. */
}

/* Ensure the overlay (where you start brushing) is interactive but invisible */
#calendar .brush .overlay {
  fill: none;             /* No fill */
  pointer-events: all;    /* MUST be 'all' or 'visible' to initiate brushing */
  cursor: crosshair;      /* Indicate where a new selection can start */
}
